"use strict";
(global.webpackChunkWeMod = global.webpackChunkWeMod || []).push([
  [6117],
  {
    "cheats/resources/value-converters/blueprint-translation": (l, n, u) => {
      u.r(n), u.d(n, { BlueprintTranslationValueConverter: () => c });
      var e = u(70655),
        t = u("aurelia-framework"),
        r = u(45437),
        a = u(62546),
        s = u(41931),
        i = u(35969),
        o = u(28475);
      let c = class {
        #l;
        #n;
        constructor(l, n) {
          (this.signals = [o.H]),
            (this.#l = l),
            n.state
              .pipe((0, a.j)("gameTranslations"), (0, s.x)())
              .subscribe((l) => {
                this.#n = l;
              });
        }
        toView(l, n) {
          return l && n
            ? this.#n?.[n.gameId]?.[this.#l.getEffectiveLocale().baseName]?.[
                l
              ] ?? l
            : l;
        }
      };
      c = (0, e.gn)(
        [(0, t.autoinject)(), (0, e.w6)("design:paramtypes", [i.oc, r.yh])],
        c
      );
    },
    "cheats/resources/value-converters/group-feed-items": (l, n, u) => {
      u.r(n), u.d(n, { GroupFeedItemsValueConverter: () => r });
      var e = u(70655),
        t = u("aurelia-framework");
      let r = class {
        filterItems(l, n) {
          switch (n) {
            case "playable":
              return l.filter((l) => l.isInstalled && l.isAvailable);
            case "unsupported":
              return l.filter((l) => !l.isAvailable);
            case "launch_without_mods":
              return l.filter((l) => l.isInstalled && !l.isAvailable);
            case "unsupported_and_not_installed":
              return l.filter((l) => !l.isInstalled && !l.isAvailable);
            case "installable":
              return l.filter((l) => !l.isInstalled && l.isAvailable);
            case "free_games_to_install":
              return l.filter(
                (l) => l.isFree && !l.isFavorite && !l.isInstalled
              );
            case "favorites_not_installed":
              return l.filter(
                (l) => l.isAvailable && l.isFavorite && !l.isInstalled
              );
            default:
              return l;
          }
        }
        toView(l, n) {
          return n
            .map((n) => ({ group: n, items: this.filterItems(l, n) }))
            .filter((l) => l.items.length > 0);
        }
      };
      r = (0, e.gn)([(0, t.autoinject)()], r);
    },
    "cheats/resources/value-converters/proper-hotkey": (l, n, u) => {
      u.r(n), u.d(n, { ProperHotkeyValueConverter: () => i });
      var e = u(70655),
        t = u("aurelia-framework"),
        r = u(35969),
        a = u(28475);
      const s = new Map([
        [106, "*"],
        [107, "+"],
        [109, "-"],
        [111, "/"],
      ]);
      let i = class {
        #l;
        constructor(l) {
          (this.signals = [a.H]), (this.#l = l);
        }
        toView(l) {
          if ("number" != typeof l) return null;
          if (l >= 96 && l <= 105)
            return this.#l.getValue("trainer_hotkey.numpad_$x", {
              x: (l - 96).toString(10),
            });
          if (s.has(l))
            return this.#l.getValue("trainer_hotkey.numpad_$x", {
              x: s.get(l),
            });
          const n = o[l];
          return "string" == typeof n
            ? this.#l.getValue(`trainer_hotkey.${n}`)
            : keyNames[l] || null;
        }
      };
      i = (0, e.gn)(
        [(0, t.autoinject)(), (0, e.w6)("design:paramtypes", [r.oc])],
        i
      );
      const o = [
          "not_set",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "key_control",
          "key_alt",
          "key_pause",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "key_page_up",
          "key_page_down",
          "key_end",
          "key_home",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "key_print_screen",
          "key_insert",
          "key_delete",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "key_scroll_lock",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
        ],
        keyNames = [
          "Not Set",
          "LClick",
          "RClick",
          "Control-break",
          "MClick",
          "XButton1",
          "XButton2",
          "Guide",
          "Backspace",
          "Tab",
          "WheelUp",
          "WheelDown",
          "Clear",
          "Enter",
          null,
          null,
          "Shift",
          "Ctrl",
          "Alt",
          "Pause",
          "Caps",
          null,
          null,
          null,
          null,
          null,
          null,
          "Esc",
          null,
          null,
          null,
          null,
          "Space",
          "PgUp",
          "PgDn",
          "End",
          "Home",
          "←",
          "↑",
          "→",
          "↓",
          "Select",
          "Print",
          "Execute",
          "PrtSc",
          "Ins",
          "Del",
          "Help",
          "0",
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "I",
          "J",
          "K",
          "L",
          "M",
          "N",
          "O",
          "P",
          "Q",
          "R",
          "S",
          "T",
          "U",
          "V",
          "W",
          "X",
          "Y",
          "Z",
          null,
          null,
          "Apps",
          null,
          null,
          "Numpad 0",
          "Numpad 1",
          "Numpad 2",
          "Numpad 3",
          "Numpad 4",
          "Numpad 5",
          "Numpad 6",
          "Numpad 7",
          "Numpad 8",
          "Numpad 9",
          "Numpad *",
          "Numpad +",
          "Separator",
          "Numpad -",
          "Decimal",
          "Numpad /",
          "F1",
          "F2",
          "F3",
          "F4",
          "F5",
          "F6",
          "F7",
          "F8",
          "F9",
          "F10",
          "F11",
          "F12",
          "F13",
          "F14",
          "F15",
          "F16",
          "F17",
          "F18",
          "F19",
          "F20",
          "F21",
          "F22",
          "F23",
          "F24",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "NumLk",
          "SrcLk",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "Back",
          "Forward",
          "Refresh",
          "Stop",
          "Search",
          "Favorites",
          "Start",
          "VolMute",
          "VolDown",
          "VolUp",
          "Next",
          "Previous",
          "Stop Media",
          "Play/Pause",
          "Start Mail",
          "Select Media",
          "App 1",
          "App 2",
          null,
          null,
          ";",
          "+",
          ",",
          "-",
          ".",
          "/",
          "`",
          "LMenu",
          "LGrip",
          "LUp",
          "LDown",
          "LLeft",
          "LRight",
          "LTrigger",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "RMenu",
          "RGrip",
          "RUp",
          "RDown",
          "RLeft",
          "RRight",
          "RTrigger",
          "[",
          "\\",
          "]",
          "'",
          "OEM8",
          null,
          null,
          "OEM102",
          "LT",
          "RT",
          null,
          null,
          "Guide",
          "D-Up",
          "D-Down",
          "D-Left",
          "D-Right",
          "Start",
          "Back",
          "LStick",
          "RStick",
          "LB",
          "RB",
          "A",
          "B",
          "X",
          "Y",
          null,
          null,
          null,
          null,
          "Play",
          "Zoom",
          null,
          null,
          null,
          null,
        ];
    },
    "cheats/resources/value-converters/sort-keys": (l, n, u) => {
      u.r(n), u.d(n, { SortKeysValueConverter: () => t });
      const e = [17, 16, 18];
      class t {
        toView(l) {
          return l
            ? l.sort((l, n) => {
                const u = e.indexOf(l);
                l = -1 === u ? l + e.length : u;
                const t = e.indexOf(n);
                return l - (-1 === t ? n + e.length : t);
              })
            : l;
        }
      }
    },
  },
]);
